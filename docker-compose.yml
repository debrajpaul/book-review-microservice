version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - type: bind
        source: ./data
        target: /data/db
  graphql:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/projects/graphql
    command: ["pnpm", "run", "dev"]
    ports:
      - "4005:4005"
    depends_on:
      - kafka
      - mongodb
    environment:
      - PORT=4005
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DB=bookdb
      - KAFKA_BROKERS_HOST=kafka
      - KAFKA_BROKERS_PORT=9092
      - CLIENT_ID=book-service

  processor:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/projects/processor
    command: ["pnpm", "run", "dev"]
    depends_on:
      - kafka
      - mongodb
    environment:
      - PORT=4005
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DB=bookdb
      - KAFKA_BROKERS_HOST=kafka
      - KAFKA_BROKERS_PORT=9092
      - CLIENT_ID=book-service
